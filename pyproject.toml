[build-system]
requires = [
  "scikit-build-core>=0.10",
  "pybind11>=2.12",
  "packaging",
  "setuptools",
  "wheel",
  "numpy>=2.0"
]
build-backend = "scikit_build_core.build"

[project]
name = "pyjags-jw"
version = "0.1.2"
description = "Python bindings for JAGS (fork, modernized build with scikit-build-core)"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "GPL-2.0-only" }
authors = [{ name = "Scout Jarman", email = "scoutjarman@yahoo.com" }]

# (UPDATED) Align runtime NumPy with build-time if you import numpy at runtime.
dependencies = [
  "numpy>=2.0",
  "arviz>=0.15",
  "h5py>=3.8",
  "pandas>=2.1",
  "xarray>=2023.7.0",
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: C++",
  "Operating System :: POSIX :: Linux",
  "Topic :: Scientific/Engineering",
]

[project.urls]
Homepage = "https://github.com/scoutiii/pyjags_JW"
Issues = "https://github.com/scoutiii/pyjags_JW/issues"

[tool.scikit-build]
wheel.packages = ["pyjags"]

sdist.include = [
  "CMakeLists.txt",
  "pyproject.toml",
  "pyjags/__init__.py",
  "pyjags/*.py",
  "pyjags/console.cc",
  "LICENSE",
  "README*",
  "tests/*"
]

build-dir = "build/{wheel_tag}"
logging.level = "INFO"

# If you later need to pass CMake definitions, uncomment:
# [tool.scikit-build.cmake.define]
# CMAKE_CXX_STANDARD = "17"

# ---------------------------
# NEW: cibuildwheel config
# ---------------------------
[tool.cibuildwheel]
# Build CPython 3.11â€“3.13 across platforms
build = ["cp311-*", "cp312-*", "cp313-*"]

# Run tests against the installed wheel
test-requires = ["pytest"]
test-command = "pytest -q {project}/tests"

# Architectures / policies
macos.archs = ["universal2"]
linux.archs = ["x86_64", "aarch64"]
linux.manylinux-policy = "manylinux_2_28"   # or "manylinux_2_17_x86_64" if you need wider glibc

# Provide common env to the build (CMake/find_package/pkg-config)
environment = [
  "PKG_CONFIG_PATH",
  "CMAKE_PREFIX_PATH",
  "CPPFLAGS",
  "LDFLAGS"
]

# Install JAGS inside each build environment
before-all-linux = "bash {project}/ci/install_jags_linux.sh"
before-all-macos = "bash {project}/ci/install_jags_macos.sh"

# If you also add Windows later:
# before-all-windows = "bash {project}/ci/install_jags_windows.sh"
