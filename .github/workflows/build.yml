name: Wheels (cibuildwheel) + sdist

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (host)
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Enable aarch64 emulation for manylinux aarch64 builds
      - name: Set up QEMU (Linux only, for aarch64 wheels)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install build tooling
        run: |
          python -m pip install -U pip build cibuildwheel

      # cibuildwheel will:
      #  - run `before-all-linux/macos` from pyproject.toml (your JAGS installers)
      #  - build/repair wheels for cp311, cp312, cp313
      #  - run tests against the installed wheel (per pyproject's test-command)
      - name: Build wheels with cibuildwheel
        env:
          CIBW_BUILD: "cp311-* cp312-* cp313-*"
          CIBW_SKIP: "pp* *musllinux*"     # adjust if you want musllinux/PyPy
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Build sdist
        run: |
          python -m build --sdist
          ls -l dist

      - name: Show wheels
        run: ls -l wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: |
            wheelhouse/*.whl
            dist/*.tar.gz
          if-no-files-found: error
