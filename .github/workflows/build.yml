name: Wheels (cibuildwheel) + sdist

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (host)
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # ---------- LINUX: build custom manylinux images with JAGS preinstalled ----------
      - name: Set up QEMU for cross-arch docker (Linux only)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx (Linux only)
        if: runner.os == 'Linux'
        uses: docker/setup-buildx-action@v3

      - name: Build manylinux x86_64 image with JAGS (Linux only)
        if: runner.os == 'Linux'
        run: |
          docker buildx build \
            --build-arg BASE=quay.io/pypa/manylinux_2_28_x86_64 \
            -f ci/manylinux-jags.Dockerfile \
            -t local/manylinux-jags:2.28-x86_64 \
            --load .
          docker image ls local/manylinux-jags:2.28-x86_64

      - name: Build manylinux aarch64 image with JAGS (Linux only)
        if: runner.os == 'Linux'
        run: |
          docker buildx build \
            --platform linux/arm64 \
            --build-arg BASE=quay.io/pypa/manylinux_2_28_aarch64 \
            -f ci/manylinux-jags.Dockerfile \
            -t local/manylinux-jags:2.28-aarch64 \
            --load .
          docker image ls local/manylinux-jags:2.28-aarch64

      - name: Install build tooling
        run: python -m pip install -U pip build cibuildwheel

      # macOS: Homebrew JAGS for the host; cibuildwheel will delocate into wheel
      - name: macOS JAGS (Homebrew)
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install jags pkg-config || true

      - name: Build wheels with cibuildwheel
        env:
          CIBW_BUILD: "cp311-* cp312-* cp313-*"
          CIBW_SKIP: "pp* *musllinux*"
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "universal2"

          # Point cibuildwheel to our custom images (Linux only)
          CIBW_MANYLINUX_X86_64_IMAGE: "local/manylinux-jags:2.28-x86_64"
          CIBW_MANYLINUX_AARCH64_IMAGE: "local/manylinux-jags:2.28-aarch64"

          # Make JAGS discoverable during the build (Linux image already sets PKG_CONFIG_PATH)
          CIBW_ENVIRONMENT_LINUX: >
            PKG_CONFIG_PATH=/opt/jags/lib/pkgconfig
            CPPFLAGS='-I/opt/jags/include'
            LDFLAGS='-L/opt/jags/lib'

          # macOS: both brew prefixes, and universal2 for CMake
          CIBW_ENVIRONMENT_MACOS: >
            PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/opt/homebrew/lib/pkgconfig
            CMAKE_OSX_ARCHITECTURES='arm64;x86_64'
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Build sdist
        run: |
          python -m build --sdist
          ls -l dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: |
            wheelhouse/*.whl
            dist/*.tar.gz
          if-no-files-found: error
