name: Build (wheels + sdist)

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.os }} / py${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14]
        python: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Build sdist
        run: |
          python -m pip install -U pip build
          python -m build --sdist
        env:
          SETUPTOOLS_SCM_PRETEND_VERSION: "0+git"

      - name: Build wheels with cibuildwheel
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_BUILD: "cp311-* cp312-* cp313-*"
          CIBW_SKIP: "pp* *-win32 *-musllinux*"
          CIBW_TEST_REQUIRES: "pytest numpy"
          CIBW_TEST_COMMAND: "pytest -q {project}/tests"
          CIBW_ENVIRONMENT: >
            JAGS_VERSION=4.3.2
            JAGS_PREFIX={project}/.jags-prefix
          CIBW_BEFORE_BUILD_LINUX: "bash ci/install_jags_linux.sh {project}"
          CIBW_BEFORE_BUILD_MACOS: "bash ci/install_jags_macos.sh {project}"
          # Choose a modern manylinux; keep in sync with pyproject if you override there
          CIBW_MANYLINUX_X86_64_IMAGE: "manylinux_2_28"

      - name: Show wheels
        run: ls -R wheelhouse/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python }}
          path: |
            dist/*.tar.gz
            wheelhouse/*.whl
