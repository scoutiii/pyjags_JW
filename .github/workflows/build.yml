name: Wheels (cibuildwheel) + sdist

on:
  push:
    branches: [ main, master ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (host)
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # Enable aarch64 emulation for manylinux aarch64 builds
      - name: Set up QEMU (Linux only)
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Install build tooling
        run: |
          python -m pip install -U pip build cibuildwheel

      - name: Build wheels with cibuildwheel
        env:
          # Python versions / variants
          CIBW_BUILD: "cp311-* cp312-* cp313-*"
          CIBW_SKIP: "pp* *musllinux*"   # add/remove as needed

          # Target architectures
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "universal2"

          # --- Build JAGS before each wheel build (inside the build env) ---
          # Linux: build JAGS from source into /opt/jags
          CIBW_BEFORE_BUILD_LINUX: >
            bash -euxc "
            WORK=/tmp/jagsbuild;
            mkdir -p $WORK && cd $WORK;
            curl -Ls -o jags.tar.gz https://sourceforge.net/projects/mcmc-jags/files/JAGS/latest/download;
            tar -xf jags.tar.gz;
            cd JAGS-*;
            ./configure --prefix=/opt/jags --disable-static;
            make -j$(nproc);
            make install;
            "

          # macOS: install JAGS via Homebrew on host (cibuildwheel macOS builds on host)
          CIBW_BEFORE_BUILD_MACOS: >
            bash -euxc "
            brew update;
            brew install jags pkg-config || true;
            "

          # --- Make JAGS discoverable during the C/C++ build ---
          # Linux: point pkg-config & compiler to /opt/jags
          CIBW_ENVIRONMENT_LINUX: >
            PKG_CONFIG_PATH=/opt/jags/lib/pkgconfig
            CPPFLAGS='-I/opt/jags/include'
            LDFLAGS='-L/opt/jags/lib'

          # macOS: support both Intel (/usr/local) and Apple Silicon (/opt/homebrew); ensure universal2
          CIBW_ENVIRONMENT_MACOS: >
            PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/opt/homebrew/lib/pkgconfig
            CMAKE_OSX_ARCHITECTURES='arm64;x86_64'

          # If you want stricter policies, uncomment (matching your manylinux baseline):
          # CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          # CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Build sdist
        run: |
          python -m build --sdist
          ls -l dist

      - name: Show wheels
        run: ls -l wheelhouse

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: |
            wheelhouse/*.whl
            dist/*.tar.gz
          if-no-files-found: error
